{"version":3,"sources":["logo.svg","Components/Navbar.js","Components/Buttons.js","Components/Textbody.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","onClick","toggleMode","type","Buttons","disabled","text","length","newText","toLowerCase","replace","a","toUpperCase","btnClick","showAlert","navigator","clipboard","writeText","trim","Textbody","useState","setText","heading","split","filter","char","value","id","onChange","event","target","name","rows","Alert","display","alertStyle","setAlertStyle","alert","style","class","msg","App","setMode","setAlert","message","setTimeout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.77ad9024.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\n// import PropTypes from 'prop-types'\r\nimport './navbar.css';\r\n\r\nfunction Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-${props.mode}`}>\r\n            <div className='nav-brand'>\r\n                <h1 className={`brand brand-${props.mode}`}>Text-Manip</h1>\r\n            </div>\r\n            <div> \r\n                <label className=\"switch\">\r\n                    <input onClick={props.toggleMode} type=\"checkbox\"/>\r\n                    <span className=\"slider round\"></span>\r\n                </label>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react'\r\nimport './Buttons.css'\r\n\r\nfunction Buttons(props) {\r\n    const handleUp = () => {\r\n        const newText = props.text.toUpperCase()\r\n        props.btnClick(newText)\r\n        props.showAlert(\"Converted To Uppercase\", \"Sucess\")\r\n    }\r\n    const handleLow = () => {\r\n        const newText = props.text.toLowerCase()\r\n        props.btnClick(newText)\r\n        props.showAlert(\"Converted To Lowercase\", \"Sucess\")\r\n    }\r\n    const handleClr = () => {\r\n        const newText = \"\"\r\n        props.btnClick(newText)\r\n        props.showAlert(\"Cleared\", \"Sucess\")\r\n    }\r\n    const handleCopy = () => {\r\n        navigator.clipboard.writeText(props.text)\r\n        props.showAlert(\"Text Copied\", \"Sucess\")\r\n    }\r\n    const handleExtraSpace = () => {\r\n        const newText = props.text.replace(/\\s+/g, ' ').trim()\r\n        props.btnClick(newText)\r\n        props.showAlert(\"Extra Spaces Are Removed\", \"Sucess\")\r\n    }\r\n    const capitalize = () => {\r\n        const newText = props.text.toLowerCase().replace( /\\b./g, function(a){ return a.toUpperCase(); } );\r\n        props.btnClick(newText)\r\n        props.showAlert(\"Capitalized\", \"Sucess\")\r\n    };\r\n    return (\r\n        <div className='btn-box'>\r\n            <button disabled={props.text.length===0} className=\"btn caps\" onClick={capitalize}>Capitalize</button>\r\n            <button disabled={props.text.length===0} className=\"btn Uppercase\" onClick={handleUp}>Uppercase</button>\r\n            <button disabled={props.text.length===0} className=\"btn Lowercase\" onClick={handleLow}>Lowercase</button>\r\n            <button disabled={props.text.length===0} className=\"btn clr\" onClick={handleClr}>Clear Text</button>\r\n            <button disabled={props.text.length===0} className=\"btn clr\" onClick={handleCopy}>Copy Text</button>\r\n            <button disabled={props.text.length===0} className=\"btn Spcrmv\" onClick={handleExtraSpace}>Remove Extra Spaces</button>\r\n            {/* <div className=\"dropdown\">\r\n                <button className=\"btn\">More</button>\r\n                <div className=\"dropdown-content\">\r\n                    <button className=\"danger\" onClick={handleClr}>Add</button>\r\n                    <button className=\"danger\" onClick={handleClr}>Add</button>\r\n                </div>\r\n            </div> */}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Buttons\r\n","import React, {useState} from 'react'\r\nimport './textbody.css'\r\nimport Buttons from './Buttons';\r\n\r\n\r\n\r\nfunction Textbody(props) {\r\n    const [text, setText] = useState(\"\")\r\n\r\n    const handleOnChange = (event) => {\r\n        setText(event.target.value)\r\n    }\r\n    const btnClick = (newText) => {\r\n        setText(newText)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n                <h2 className={`eth eth-${props.mode}`}>{props.heading}</h2>\r\n                <div className='text-info'>\r\n                    {text.length!==0 &&\r\n                        <p className='text-info-part'>{text.split(\" \").filter((char)=>{return char.length!==0}).length} Words & {text.length} Characters. It will take aproxx. {0.008* text.split(\" \").filter((char)=>{return char.length!==0}).length} minutes to read</p>\r\n                    }\r\n                </div>\r\n                <textarea className=\"typehere\" value={text} id='myText' onChange={handleOnChange} name=\"textarea\" rows=\"15\"/>\r\n            </div>\r\n            <div className='btn-info'>\r\n                <Buttons showAlert={props.showAlert} text={text} btnClick={btnClick}/>\r\n            </div>\r\n            <div className='view-container'>\r\n                <h2 className={`preview preview-${props.mode}`}>Text Preview</h2>\r\n                <p className='ntp'>{text.length>0?text:\"Nothing To Preview\"}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Textbody\r\n","import React, {useState} from 'react'\r\nimport \"./Alert.css\"\r\n\r\nfunction Alert(props) {\r\n    const [alertStyle, setAlertStyle] = useState({\r\n        display: 'block'\r\n    })\r\n    const closeAlert=()=>{\r\n        setAlertStyle({\r\n            display:'none'\r\n        })\r\n    }\r\n    return (\r\n        <div className='alert-box'>\r\n            {props.alert && <div style={alertStyle} className={`alert alert-${props.alert.type}`}>\r\n            <span class=\"closebtn\" onClick={closeAlert}>&times;</span>\r\n                <b><i>{props.alert.type}</i></b>: {props.alert.msg}\r\n            </div>}\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './Components/Navbar';\nimport Textbody from './Components/Textbody';\nimport React, {useState} from 'react';\nimport Alert from './Components/Alert';\n\n\nfunction App() {\n  const [mode, setMode] = useState('light')\n  const [alert, setAlert] = useState(null)\n  const showAlert=(message, type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 1500);\n  }\n  const toggleMode=() =>{\n    if (mode === 'light') {\n      setMode('dark')\n      showAlert(\"Dark Mode Enabled\", \"Sucess\")\n    }\n    else{\n      setMode('light')\n      showAlert(\"Light Mode Enabled\", \"Sucess\")\n    }\n  }\n  return (\n    <div className={`app app-${mode}`}>\n      <Navbar mode={mode} toggleMode={toggleMode}/>\n      <Alert alert={alert}/>\n      <Textbody showAlert={showAlert} mode={mode} heading=\"Text Manipulator\"/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}